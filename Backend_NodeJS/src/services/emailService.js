import { reject } from "lodash";
import db from "../models/index";
require("dotenv").config();
import nodemailer from "nodemailer";
import moment from 'moment';
import localization from 'moment/locale/vi';


let sendEmailService = async (dataSend) => {
  const transporter = nodemailer.createTransport({
    //  service: "gmail",
    host: "smtp.gmail.com",
    port: 587,
    secure: false,

    auth: {
      // TODO: replace `user` and `pass` values from <https://forwardemail.net>
      user: process.env.EMAIL_APP,
      pass: process.env.EMAIL_APP_PASSWORD,
    },
  });

  const info = await transporter.sendMail({
    from: '"Heathy care üëª" <duyduy16102001@gmail.com>', // sender address
    to: dataSend.receiverEmail, // list of receivers
    subject: "Th√¥ng tin ƒë·∫∑t l·ªãch kh√°m b·ªánh", // Subject line
    text: "Hello world?", // plain text body
    html: getBodyHTMLEmail(dataSend),
  });
};

let getBodyHTMLEmail = (dataSend) => {
  let result = "";
  if (dataSend.language === "vi") {
    result = `
     <h3>Xin ch√†o ${dataSend.patientName}! </h3>
     <p>B·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y th√¨ ƒë√£ ƒë·∫∑t l·ªãch kh√°m b·ªánh online tr√™n Care heathy th√†nh c√¥ng </p>
     <p>Th√¥ng tin ƒë·∫∑t l·ªãch kh√°m b·ªánh </p>
     <div>Th·ªùi gian: ${dataSend.time} </div>
     <div>B√°c sƒ©: ${dataSend.doctorName} </div>
    <p>N·∫øu c√°c th√¥ng tin tr√™n l√† ƒë√∫ng, vui l√≤ng click v√†o link ƒë·ªÉ x√°c nh·∫≠n ƒë·∫∑t l·ªãch kh√°m b·ªánh </p>
    <div>
    <a  href=${dataSend.redirectLink} target="_blank">Click </a>
    
    </div>
    <div>Xin ch√¢n th√†nh c·∫£m ∆°n!</div>
     `; // html body
  } else if (dataSend.language === "en") {
    result = `
    <h3>Hello ${dataSend.patientName}! </h3>
    <p>If you have received this email, you have successfully booked an online medical examination appointment on Care healthy</p>
    <p>Information on scheduling medical examinations</p>
    <div>Time: ${dataSend.time} </div>
    <div>Doctor: ${dataSend.doctorName} </div>
   <p>
   If the above information is correct, please click on the link to confirm the medical examination appointment </p>
   <div>
   <a  href=${dataSend.redirectLink} target="_blank">Click </a>
   
   </div>
   <div>Sincerely thank!</div>
    `; // html body
  }
  return result;
};

let sendAttachment = (dataSend) => {
  return new Promise(async (resolve, reject) => {
    try {
      const transporter = nodemailer.createTransport({
        //  service: "gmail",
        host: "smtp.gmail.com",
        port: 587,
        secure: false,

        auth: {
          // TODO: replace `user` and `pass` values from <https://forwardemail.net>
          user: process.env.EMAIL_APP,
          pass: process.env.EMAIL_APP_PASSWORD,
        },
      });
      
      const info = await transporter.sendMail({
        from: '"Heathy care üëª" <duyduy16102001@mgail.com>', // sender address
        to: dataSend.email, // list of receivers
        subject: "K·∫øt qu·∫£ kh√°m b·ªánh", // Subject line
        text: "Hello world?", // plain text body
        html: getBodyHTMLEmailRemedy(dataSend),
        attachments: {
          filename: `Remedy-${dataSend.patientName}-${new Date().getTime()}.pdf`,
           content: dataSend.imageBase64.split("base64,")[1],
          encoding: 'base64',
        
          
        },
      });

      resolve();
    }
    catch (e) {
      reject(e);
    }
  })
}


let getBodyHTMLEmailRemedy = (dataSend) => {
  let result = "";
  if (dataSend.language === "vi") {
    result = `
     <h3>Xin ch√†o ${dataSend.patientName}! </h3>
     <p>B·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y khi b·∫°n ƒë√£ kh√°m b·ªánh ·ªü ch·ªó ch√∫ng t√¥i th√†nh c√¥ng </p>
     <p>Th√¥ng tin ƒë∆°n thu·ªëc </p>
    
    <div>Xin ch√¢n th√†nh c·∫£m ∆°n!</div>
     `; // html body
  } else if (dataSend.language === "en") {
    result = `
    <h3>Hello! ${dataSend.patientName} </h3>
    <p>You receive this email when you have successfully had a medical examination with us</p>

    
   <p> Prescription information</p>
  
   <div>Sincerely thank!</div>
    `; // html body
  }
  return result;
}


let sendCancelAttachment = (dataSend) => {

  return new Promise(async (resolve, reject) => {
    try {
      const transporter = nodemailer.createTransport({
        //  service: "gmail",
        host: "smtp.gmail.com",
        port: 587,
        secure: false,

        auth: {
          // TODO: replace `user` and `pass` values from <https://forwardemail.net>
          user: process.env.EMAIL_APP,
          pass: process.env.EMAIL_APP_PASSWORD,
        },
      });
      


      const info = await transporter.sendMail({
        from: '"Heathy care üëª" <duyduy16102001@mgail.com>', // sender address
        to: dataSend.email, // list of receivers
        subject: "H·ªßy l·ªãch kh√°m b·ªánh", // Subject line
        text: "Hello world?", // plain text body
        html: getBodyHTMLEmailCancelRemedy(dataSend),
      });

      resolve();
    }
    catch (e) {
      reject(e);
    }
  })
}


let getBodyHTMLEmailCancelRemedy =  (dataSend) => {
  let date =   moment.unix(+ dataSend.date / 1000).format('dddd - DD/MM/YYYY');


  let result = "";
  if (dataSend.language === "vi") {
    result = `
     <h3>Xin ch√†o ${dataSend.patientName}! </h3>
     <p>V√¨ m·ªôt v√†i l√≠ do n√™n ch√∫ng t√¥i xin ph√©p h·ªßy l·ªãch h·∫πn ${date}, ca kh√°m ${dataSend.timeTypePatient.valueVi}. </p>
     
     <p>Mong qu√Ω kh√°ch vui l√≤ng ƒëƒÉng k√Ω l·ªãch h·∫πn kh√°c ·∫° ! </p>
    
    <div>Xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y!</div>
     `; // html body
  } else if (dataSend.language === "en") {
    result = `
    <h3>Hello! ${dataSend.patientName} </h3>
    <p>Because our doctor is busy, we would like to cancel this appointment on ${date}, the ${dataSend.timeTypePatient.valueEn} examination.
    
    <p>Please register for another appointment !</p>
  
   <div>Sorry for the inconvenience!</div>
    `; // html body
  }
  return result;
}

module.exports = {
  sendEmailService: sendEmailService,
  sendAttachment: sendAttachment,
  sendCancelAttachment: sendCancelAttachment,
};
